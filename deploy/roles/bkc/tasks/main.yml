- name: Copy BKC folder
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../bkc"
    dest: "{{ install_root }}/"
    mode: '0775'
  when: ansible_connection != 'local'

- name: Install BKC system dependencies
  ansible.builtin.package:
    name:
      - qemu-utils     # for qemu-img
      - busybox-static # to generate initrd
      - elfutils       # for eu-addr2line
      - gnuplot        # for stats.py
  become: true

- name: Download Installer
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/sh.rustup.rs
    mode: '0755'
    force: 'yes'
  
- name: install rust/cargo
  ansible.builtin.command: /tmp/sh.rustup.rs -y
  changed_when: true

- name: Install BKC python dependencies
  ansible.builtin.pip:
    requirements: "{{ install_root }}/bkc/kafl/requirements.txt"
    virtualenv: "{{ fuzzer_venv_root }}"
    virtualenv_command: "python3 -m venv"
  changed_when: true
  when: not ansible_check_mode
  tags:
    - build

- name: Install BKC smatcher
  ansible.builtin.pip:
    name: "file://{{ install_root }}/bkc/coverage/smatcher"
    editable: true
    virtualenv: "{{ fuzzer_venv_root }}"
    virtualenv_command: "python3 -m venv"
  changed_when: true
  when: not ansible_check_mode
  tags:
    - build

- name: Install BKC fast_matcher
  ansible.builtin.command: cargo install --path "{{ install_root }}/bkc/coverage/fast_matcher"
  changed_when: true
  when: not ansible_check_mode
  tags:
    - build

- name: Update KVM module option to set VE injection
  ansible.builtin.blockinfile:
    path: /etc/modprobe.d/kvm-intel.conf
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ccc-linux-guest-hardening"
    block: |
      options kvm-intel nested=1 ve_injection=1 halt_on_triple_fault=1
    create: true
  become: true
